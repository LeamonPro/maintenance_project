# Generated by Django 5.2.1 on 2025-06-16 10:21

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrdreImputation',
            fields=[
                ('id_ordre', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255, unique=True)),
                ('date_prochain_cycle_visite', models.DateField(blank=True, null=True, verbose_name='Date Prochain Cycle Visite')),
                ('date_derniere_visite_effectuee', models.DateField(blank=True, null=True, verbose_name='Date Dernière Visite Effectuée')),
                ('dernier_cycle_visite_resultat', models.BooleanField(blank=True, null=True, verbose_name='Résultat Dernier Cycle Visite (Accepté/Échoué)')),
                ('total_hours_of_work', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Total Hours of Work Accumulated')),
                ('last_notified_threshold', models.PositiveIntegerField(blank=True, null=True, verbose_name='Last Notified Preventive Threshold (Actual Hours)')),
            ],
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id_technician', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AdvancementNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('note', models.TextField()),
                ('created_by_username', models.CharField(blank=True, max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdvancementNoteImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='advancement_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('advancement_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.advancementnote')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id_display', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Task Display ID')),
                ('type', models.CharField(choices=[('preventif', 'Preventif'), ('curatif', 'Curatif'), ('visite hierarchique', 'Visite Hierarchique')], default='preventif', max_length=50)),
                ('tasks', models.TextField(verbose_name='Task Description')),
                ('epi', models.TextField(blank=True, null=True, verbose_name='EPI Required')),
                ('pdr', models.TextField(blank=True, null=True, verbose_name='PDR Required')),
                ('status', models.CharField(choices=[('assigned', 'Assigned'), ('in progress', 'In Progress'), ('closed', 'Closed')], default='assigned', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Heure de Début')),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Heures de Travail Estimées')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Date et Heure de Clôture')),
                ('hours_of_work', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='New Total Operating Hours for OI')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ordre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.ordreimputation', to_field='value')),
                ('techniciens', models.ManyToManyField(blank=True, related_name='tasks_assigned', to='api.technician')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('recipient_type', models.CharField(choices=[('Role', 'Role'), ('UserInRole', 'UserInRole')], max_length=20)),
                ('recipient_role', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('Chef de Parc', 'Chef de Parc')], max_length=50, null=True)),
                ('notification_category', models.CharField(choices=[('TASK', 'Task Related'), ('CYCLE_VISIT', 'Cycle Visit Related'), ('PREVENTIVE_CHECKLIST', 'Preventive Maintenance Checklist'), ('GENERAL', 'General Notification')], default='GENERAL', max_length=30)),
                ('recipient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('ordre_imputation_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oi_notifications', to='api.ordreimputation')),
                ('task_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_notifications', to='api.task')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='advancementnote',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advancement_notes', to='api.task'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Chef de Parc', 'Chef de Parc')], max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_to_profile',
            field=models.ForeignKey(limit_choices_to={'role': 'Chef de Parc'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='api.userprofile'),
        ),
        migrations.CreateModel(
            name='PreventiveTaskTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre de la Tâche Préventive')),
                ('description', models.TextField(verbose_name='Description (élément de checklist)')),
                ('trigger_hours', models.PositiveIntegerField(help_text="Le nombre d'heures de travail total de l'OI qui déclenche cette tâche.", verbose_name='Heures de Déclenchement (ex: 200, 400)')),
                ('ordre_imputation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preventive_task_templates', to='api.ordreimputation', verbose_name="Ordre d'Imputation Concerné")),
            ],
            options={
                'verbose_name': 'Modèle de Tâche Préventive',
                'verbose_name_plural': 'Modèles de Tâches Préventives',
                'unique_together': {('ordre_imputation', 'trigger_hours', 'description')},
            },
        ),
    ]
